<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/ModSyncTool;component/Themes/Colors.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- Typography -->
  <Style TargetType="TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
  </Style>

  <Style x:Key="TitleText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontWeight" Value="SemiBold" />
  </Style>

  <!-- Button Base Template with CornerRadius -->
  <Style x:Key="BaseButtonStyle" TargetType="Button">
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Padding" Value="12,10" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="{DynamicResource NeutralBgBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource NeutralBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border x:Name="bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="8">
            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="bd" Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource NeutralHoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource NeutralHoverBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Primary Button -->
  <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentBrushHover}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushHover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentBrushPressed}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrushPressed}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Secondary Button -->
  <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}" />

  <!-- TextBox with rounded corners -->
  <Style TargetType="TextBox">
    <Setter Property="Padding" Value="8,6" />
    <Setter Property="BorderBrush" Value="{DynamicResource NeutralBorderBrush}" />
    <Setter Property="Background" Value="{DynamicResource NeutralBgBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="bd"
                  CornerRadius="6"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="1">
            <ScrollViewer x:Name="PART_ContentHost" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="bd" Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- CheckBox spacing -->
  <Style TargetType="CheckBox">
    <Setter Property="Margin" Value="0,4,0,0" />
  </Style>

  <!-- ProgressBar height & corner -->
  <Style TargetType="ProgressBar">
    <Setter Property="Height" Value="16" />
  </Style>

  <!-- TabControl & TabItem themed styles -->
  <Style TargetType="TabControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabControl">
          <Grid ClipToBounds="True" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!-- Header strip background -->
            <Border Grid.Row="0" Background="{DynamicResource NeutralBgBrush}" />
            <TabPanel x:Name="HeaderPanel"
                      Grid.Row="0"
                      IsItemsHost="True"
                      Margin="6,4,6,0"
                      Panel.ZIndex="1"
                      Background="{x:Null}" />
            <!-- Content area -->
            <Border Grid.Row="1"
                    Background="{DynamicResource PanelBackgroundBrush}"
                    BorderBrush="{DynamicResource NeutralBorderBrush}"
                    BorderThickness="1"
                    Margin="6,6,6,6">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                                Margin="8"
                                ContentSource="SelectedContent" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="TabItem">
    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="Bd"
                  Background="{DynamicResource NeutralBgBrush}"
                  BorderBrush="{DynamicResource NeutralBorderBrush}"
                  BorderThickness="1"
                  CornerRadius="6,6,0,0"
                  Padding="10,6"
                  Margin="0,0,6,0">
            <ContentPresenter ContentSource="Header"
                              RecognizesAccessKey="True"
                              HorizontalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TreeView background/foreground -->
  <Style TargetType="TreeView">
    <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource NeutralBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0" />
  </Style>

  <!-- Context menu styling -->
  <Style TargetType="ContextMenu">
    <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource NeutralBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
  </Style>

  <Style TargetType="MenuItem">
    <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Style.Triggers>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{DynamicResource NeutralHoverBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.6" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
